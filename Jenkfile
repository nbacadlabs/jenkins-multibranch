pipeline {
    agent any

    environment {
        ACR_NAME = "youracrname"  // Azure Container Registry name
        RESOURCE_GROUP = "your-resource-group"
        AKS_CLUSTER = "your-aks-cluster"
        IMAGE_NAME = "your-app-name"
        ACR_LOGIN_SERVER = "${ACR_NAME}.azurecr.io"
        BRANCH_NAME = "${env.BRANCH_NAME}"
        IMAGE_TAG = "${env.BRANCH_NAME}-latest"  // Different tags for each branch
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    echo "Building branch: ${BRANCH_NAME}"
                    checkout scm
                }
            }
        }

        stage('Azure Login') {
            steps {
                script {
                    withCredentials([azureServicePrincipal('azure-credentials')]) {
                        sh '''
                        az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
                        az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER --overwrite-existing
                        '''
                    }
                }
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                script {
                    sh "az acr login --name $ACR_NAME"
                    sh "docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG ."
                    sh "docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG"
                }
            }
        }

        stage('Deploy to AKS') {
            when {
                expression { BRANCH_NAME == 'main' || BRANCH_NAME == 'develop' }
            }
            steps {
                script {
                    def envNamespace = BRANCH_NAME == 'main' ? "production" : "staging"
                    sh "kubectl apply -f k8s/deployment-${envNamespace}.yaml"
                    sh "kubectl apply -f k8s/service-${envNamespace}.yaml"
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    sh "kubectl get pods -n ${BRANCH_NAME == 'main' ? 'production' : 'staging'}"
                    sh "kubectl get svc -n ${BRANCH_NAME == 'main' ? 'production' : 'staging'}"
                }
            }
        }
    }
}
